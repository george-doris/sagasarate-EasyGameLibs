<?xml version="1.0" encoding="gb2312" ?>
<Main ServiceName="ServerList" ServiceDesc="ServerList"> <!--如果注册为Windows服务，ServiceName为服务名，ServiceDesc为服务描述-->
  <Net NetWorkThreadCount="2"><!--NetWorkThreadCount为网络层工作线程数，Windows下最好为CPU数的2倍-->
    <EventObjectPool StartSize="10240" GrowSize="1024" GrowLimit="32" />
      <!--EventObjectPool为数据包缓冲池大小设置，Windows下必须保证够（连接收发缓冲大小之和乘最大连接数），linux下可以不设置-->
    <EventRouterPool StartSize="2048" GrowSize="512" GrowLimit="32" />
      <!--EventRouterPool为连接数据转接器对象池大小设置，最大连接数不能超过此对象池大小-->
  </Net>
  
  <Router RouterID="0" MsgQueueSize="10240" MsgProcessLimit="32" StateMsgTransfer="true" 
          EnableGuardThread="true" GuardThreadKeepAliveTime="20000" GuardThreadKeepAliveCount="5" />
  <!--路由设置，
    RouterID：路由ID，容器的唯一ID,不同容器间不可重复
    MsgQueueSize：路由的消息队列大小，
    MsgProcessLimit：每循环处理消息的上限
    StateMsgTransfer：是否对处理的消息进行统计
    EnableGuardThread：是否启用守护线程
    GuardThreadKeepAliveTime：守护线程死锁检测间隔
    GuardThreadKeepAliveCount：守护线程死锁超时次数
    -->

  <!--RouterLink块为容器间的连接设置，其中的ServerID/ReportID/ID都会被自动替换为RouterID，可随意设置-->
  <RouterLink ServerID="0-0-0-200">
    <Services ReallocConnectionID="false">
      <Service ID="0-0-0-200" IP="::" Port="8500" IsUseListenThread="false" ParallelAcceptCount="64" AcceptQueueSize="32" 
               MaxPacketSize="2048000" RecvQueueSize="512"  SendQueueSize="512" DataCompressType="none" MinCompressSize="1024"/>
    </Services>
      <!--Services块配置了需要建立的侦听服务，来接受连接的连入，IsUseListenThread指示是否启用侦听线程，否者使用IOCP进行Accept(仅Windows下有效)，
      ParallelAcceptCount为最高并发Accept数(仅Windows下使用IOCP进行Accept有效)，AcceptQueueSize为Accept队列大小
      MaxPacketSize为最大数据包大小，RecvQueueSize/SendQueueSize是接收/发送缓冲大小，单位是4096字节，
      DataCompressType是数据压缩格式，填入lzo代表使用lzo格式压缩，其他不压缩，MinCompressSize代表最小压缩的数据包大小，小于这个大小的数据包不压缩-->

    <!--<Connections ReportID="0-0-0-0">
      <Connection IP="127.0.0.1" Port="8500" MaxPacketSize="2048000" RecvQueueSize="512"  SendQueueSize="512" DataCompressType="none" MinCompressSize="1024" />
    </Connections>-->
      <!--Connections配置了需要建立的连接，IP/Port为连接地址，
      MaxPacketSize为最大数据包大小，RecvQueueSize/SendQueueSize是接收/发送缓冲大小，单位是4096字节，
      DataCompressType是数据压缩格式，填入lzo代表使用lzo格式压缩，其他不压缩，MinCompressSize代表最小压缩的数据包大小，小于这个大小的数据包不压缩-->
  </RouterLink>

  <!--ClientProxys块是客户端代理配置，也就是一般意义上的网关配置，可以配置多个客户端代理，每个侦听一个端口-->
  <ClientProxys>
    <ClientProxy ProxyType="1" ProxyMode="0" ListenIP="::" ListenPort="9800" ConnectionGroupCount="0" 
                 ConnectionPoolStartSize="256" ConnectionPoolGrowSize="256" ConnectionPoolGrowLimit="32"
                 ConnectionMsgQueueSize="256"
                 AcceptQueueSize="128" ParallelAcceptCount="32" RecvBufferSize="128" SendBufferSize="128"                 
                 UnacceptConnectionKeepTime="30000" UseServerInitiativeKeepAlive="false" KeepAliveTime="10000" KeepAliveCount="20"
                 RecvFreqProtect="0" RecvFlowProtect="0" RecvProtectCheckInterval="10" ProtectCountToAddBlackList="10" ProtectBlockTime="600"
                 EnableBlackList="false" InitBlackList="" BlackListPoolStartSize="256" BlackListPoolGrowLimit="32"
                 MsgCompressType="lzo" MinMsgCompressSize="1024" 
                 MsgEnCryptType="none" SecretKey="1234567890"
                 GlobalMsgMapSize="128" MsgMapSize="1024" MaxMsgSize="40960" MaxSendMsgSize="10485760"
                 PluginName="WebSocketProxy" PluginModuleFileName="" ConfigDir="" LogDir=""
                 EnableGuardThread="true" GuardThreadKeepAliveTime="20000" GuardThreadKeepAliveCount="5" />
    <!--ProxyType：代理类型，必须唯一，所有的客户端代理不能有相同的代理类型
      ProxyMode：代理模式，0=使用内置缺省客户端代理，1=使用客户端代理插件
      ListenIP/ListenPort：侦听地址
      ConnectionGroupCount：连接组数量，0=不分组，>1=使用多个线程来分组管理连接，以提高效率
      ConnectionPoolStartSize/ConnectionPoolGrowSize/ConnectionPoolGrowLimit：连接对象池设置，限制了最大连接数
      ConnectionMsgQueueSize：连接消息队列大小
      AcceptQueueSize：Accept队列大小
      ParallelAcceptCount：Accept并发数（仅Windows有效）
      RecvBufferSize/SendBufferSize：接收/发送缓冲大小，单位是4096字节
      UnacceptConnectionKeepTime：未确认连接存在最长时间，单位是毫秒
      UseServerInitiativeKeepAlive：是否由服务器主动发送KeepAlive包
      KeepAliveTime：KeepAlive间隔
      KeepAliveCount：KeepAlive最大丢失数，超过即判定死连接，然后断开
      RecvFreqProtect：启动接受保护的最大每秒接收包次数，0为关闭
      RecvFlowProtect：启动接收保护的最大每秒接收字节数，0为关闭
      RecvProtectCheckInterval：接收保护检测时间间隔，单位秒
      ProtectCountToAddBlackList：发生多少次接受保护后加入连接黑名单
      ProtectBlockTime：加入连接黑名单后的保持时间，单位秒，0为持续到服务器重启
      EnableBlackList：是否启动连接黑名单
      InitBlackList：初始黑名单，|隔开的IP地址
      BlackListPoolStartSize：连接黑名单初始大小
      BlackListPoolGrowLimit：连接黑名单增长限制
      MsgCompressType：数据包压缩格式，lzo代表使用lzo格式压缩，其他不压缩
      MinMsgCompressSize：最小压缩的数据包大小，小于这个大小的数据包不压缩
      MsgEnCryptType：数据包加密格式，可选择DES,AES和TEA
      SecretKey：加密所使用的密钥，密钥长度，DES为8字符，AES为16/24/32字符，TEA为16字符
      GlobalMsgMapSize：全局消息映射表大小，用于决定将消息发送至那个对象
      MsgMapSize：消息映射表大小，用于决定将消息发送至那个对象
      MaxMsgSize：接收的消息最大大小
      MaxSendMsgSize：发送的消息最大大小
      PluginName：客户端代理插件名
      PluginModuleFileName：客户端代理插件DLL文件路径
      ConfigDir：传递给客户端代理插件的配置文件目录
      LogDir：传递给客户端代理插件的日志文件目录
      EnableGuardThread：是否启用守护线程
      GuardThreadKeepAliveTime：守护线程死锁检测间隔
      GuardThreadKeepAliveCount：守护线程死锁超时次数
      -->
  </ClientProxys>

  <MemoryPool Enable="true" BlockSize="64" LevelSize="1048576" LevelCount="7" />
  <!--MemoryPool是内存池设置，内部消息使用的内存由内存池分配，每次分配一个block
    内存池是分层设置,每一层的block都是上一层的2倍大，但每层的总大小是一样的
    BlockSize=第一层的block大小，LevelSize=每一层的总大小，LevelCount=层数-->

  <Object GroupCount="1" ObjectPoolStartSize="512" ObjectPoolGrowSize="512" ObjectPoolGrowLimit="512" MsgQueueSize="4096"
          AliveCheckTime="5000" AliveTestTime="200000" KeepAliveCount="5" StatObjectCPUCost="true" UseRealGroupLoadWeight="false"
          EnableGuardThread="true" GuardThreadKeepAliveTime="20000" GuardThreadKeepAliveCount="5" />
  <!--Object块是对象及对象组的设置
    GroupCount：是对象组数量，每个组是一个线程，对象会按权重分配到各个组去运行
    ObjectPoolStartSize/ObjectPoolGrowSize/ObjectPoolGrowLimit：每个组的对象池大小的设置
    MsgQueueSize：每个对象的消息队列大小
    AliveCheckTime：关注对象的检测间隔，单位毫秒
    AliveTestTime：关注对象的测试包发送间隔，单位毫秒
    KeepAliveCount：关注对象的测试包最大无回应次数，超过即判定关注对象丢失
    StatObjectCPUCost：是否统计对象的CPU使用情况，供性能分析用
    UseRealGroupLoadWeight：是否使用实际的CPU占用情况作为对象权重
    EnableGuardThread：是否启用守护线程
    GuardThreadKeepAliveTime：守护线程死锁检测间隔
    GuardThreadKeepAliveCount：守护线程死锁超时次数
    -->

  <Mono Enable="true" LibraryDir="lib" RunDir="./" CompilerPath="build/mcs" CreateProj="false" ConfigFilePath="" EnableDebug="false"
        DebugAgentListenIP="0" DebugAgentListenPort="56600" IsDebugSuspend="false" 
        BaseGCInterval="200" AdvanceGCMul="5" FullGCInterval="60000"/>
  <!--Mono块是嵌入mono虚拟机的设置
  Enable：是否启用mono虚拟机，启用mono虚拟机就可以使用c#的对象插件
  LibraryDir：mono虚拟机所需运行库目录
  RunDir：mono虚拟机运行目录
  CompilerPath：c#编译器路径
  CreateProj：编辑插件是是否创建工程文件
  ConfigFilePath：mono虚拟机配置文件目录
  EnableDebug：是否开启调试模式
  DebugAgentListenIP/DebugAgentListenPort：mono虚拟机调试代理侦听端口，供远程调试器接入
  IsDebugSuspend：启动时是否挂起等待远程调试器接入
  BaseGCInterval：基础垃圾回收间隔，单位毫秒
  AdvanceGCMul：进阶垃圾回收间隔，单位毫秒
  FullGCInterval：完整垃圾回收间隔，单位毫秒-->

  <Libs>
    <Lib Name="DOSSystem" NeedCompile="false" PrjDir="../DOSSystem">
      <SourceDir Name="../DOSSystem"/>
    </Lib>
    <Lib Name="Protocol" NeedCompile="false" >
      <SourceDir Name="protocol"/>
    </Lib>
  </Libs>
  <!--Libs块是c#库设置
  Name：库名称
  NeedCompile：是否需要编译，编译后输出到Mono块配置的LibraryDir，文件名为：库名称.dll
  PrjDir：工程文件存放目录
  SourceDir：源文件目录，可以多个-->


  <!--Plugins块是插件的设置，ExistWhenNoPlugin表示当没有插件活动是是否将容器退出-->
  <Plugins ExistWhenNoPlugin="true">
    <PluginObjectPool StartSize="4096" GrowSize="1024" GrowLimit="32" />
    <!--PluginObjectPool是插件对象池的设置-->
    <Plugin  Type="CSharp" Name="CSTest" ModuleFileName="" ConfigDir="" LogDir="" PrjDir="CSTest"
             LoadType="SourceCode" MainClassNameSpace="CSTest" MainClass="CSTestMain" >
      <SourceDir Name="CSTest"/>
    </Plugin>
    <!--Plugin是插件配置，插件可以有多个
    Type：插件类型，CSharp=C#插件，其他值是二进制插件(dll或so)
    Name：插件名称
    ModuleFileName：插件文件路径，空的话会使用插件名称加上调试版后缀D，以及对应的文件扩展名(dll或so)组合出来
    ConfigDir：传递给插件的配置文件目录
    LogDir：传递给插件的日志文件目录
    LoadType：c#插件加载方式，SourceCode=编译源文件然后加载，其他值直接加载编译好的dll
    MainClassNameSpace：c#插件主命名空间
    MainClass：c#插件主类
    SourceDir：c#源文件目录，可以有多个-->
  </Plugins>

  <System>
    <MainThread ProcessLimit="64"/>
    <LogConfig LogLevel="3" ConsoleLogLevel="3" LogCacheSize="655360" LogServerObjectUse="false" PreLoadModuleSym="false" 
               MakeFullDump="false" LogModuleSymStatus="false"/>
    <UDPControlAddress IP="0" Port="8900"/>
    <GuardThread Enable="true" KeepAliveTime="20000" KeepAliveCount="5"/>
    <ControlPipe Name="DOSS" AssembleBufferSize="8192" />
  </System>


  <SystemLink ServerID="6-0-0-1">
  </SystemLink>
  
</Main>




